-- Estrutura 

-- 1

CREATE TABLE USR_CRM.CLIENTES (
    CLIENTE_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100),
    TELEFONE VARCHAR2(15),
    DATA_CADASTRO DATE,
    PRIMARY KEY (CLIENTE_ID)
);

CREATE TABLE USR_CRM.CAMPANHAS (
    CAMPANHA_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_INICIO DATE,
    DATA_FIM DATE,
    ORCAMENTO NUMBER(10,2),
    PRIMARY KEY (CAMPANHA_ID)
);

CREATE TABLE USR_CRM.INTERACOES (
    INTERACAO_ID NUMBER NOT NULL,
    CLIENTE_ID NUMBER NOT NULL,
    CAMPANHA_ID NUMBER NOT NULL,
    DATA_INTERACAO DATE,
    TIPO VARCHAR2(50),
    METRICA VARCHAR2(100),
    VALOR NUMBER,
    PRIMARY KEY (INTERACAO_ID),
    FOREIGN KEY (CLIENTE_ID) REFERENCES USR_CRM.CLIENTES(CLIENTE_ID),
    FOREIGN KEY (CAMPANHA_ID) REFERENCES USR_CRM.CAMPANHAS(CAMPANHA_ID)
);



-- 2

CREATE TABLE USR_GESTAO_ACAD.MATRICULAS (
    MATRICULA_ID NUMBER NOT NULL,
    ESTUDANTE_ID NUMBER NOT NULL,
    DISCIPLINA_ID NUMBER NOT NULL,
    DATA_MATRICULA DATE,
    PRIMARY KEY (MATRICULA_ID),
    FOREIGN KEY (ESTUDANTE_ID) REFERENCES USR_GESTAO_ACAD.ESTUDANTES(ESTUDANTE_ID),
    FOREIGN KEY (DISCIPLINA_ID) REFERENCES USR_GESTAO_ACAD.DISCIPLINAS(DISCIPLINA_ID)
);

CREATE TABLE USR_GESTAO_ACAD.DISCIPLINAS (
    DISCIPLINA_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    CURSO_ID NUMBER,
    PROFESSOR_ID NUMBER,
    PRIMARY KEY (DISCIPLINA_ID),
    FOREIGN KEY (CURSO_ID) REFERENCES USR_GESTAO_ACAD.CURSOS(CURSO_ID),
    FOREIGN KEY (PROFESSOR_ID) REFERENCES USR_GESTAO_ACAD.PROFESSORES(PROFESSOR_ID)
);

CREATE TABLE USR_GESTAO_ACAD.ESTUDANTES (
    ESTUDANTE_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASCIMENTO DATE,
    MATRICULA VARCHAR2(20),
    CURSO_ID NUMBER,
    PRIMARY KEY (ESTUDANTE_ID),
    FOREIGN KEY (CURSO_ID) REFERENCES USR_GESTAO_ACAD.CURSOS(CURSO_ID)
);

CREATE TABLE USR_GESTAO_ACAD.CURSOS (
    CURSO_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DESCRICAO CLOB,
    DURACAO NUMBER,
    PRIMARY KEY (CURSO_ID)
);

CREATE TABLE USR_GESTAO_ACAD.PROFESSORES (
    PROFESSOR_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DEPARTAMENTO VARCHAR2(100),
    PRIMARY KEY (PROFESSOR_ID)
);



-- 3 

CREATE TABLE USR_GESTAO_HOTEL.CLIENTES (
    CLIENTE_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100),
    TELEFONE VARCHAR2(15),
    PRIMARY KEY (CLIENTE_ID)
);

CREATE TABLE USR_GESTAO_HOTEL.QUARTOS (
    QUARTO_ID NUMBER NOT NULL,
    NUMERO VARCHAR2(10) NOT NULL,
    TIPO VARCHAR2(50),
    PRECO_DIARIA NUMBER(10,2),
    PRIMARY KEY (QUARTO_ID)
);

CREATE TABLE USR_GESTAO_HOTEL.RESERVAS (
    RESERVA_ID NUMBER NOT NULL,
    CLIENTE_ID NUMBER NOT NULL,
    QUARTO_ID NUMBER,
    DATA_CHECKIN DATE,
    DATA_CHECKOUT DATE,
    STATUS VARCHAR2(50),
    PRIMARY KEY (RESERVA_ID),
    FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL.CLIENTES(CLIENTE_ID),
    FOREIGN KEY (QUARTO_ID) REFERENCES USR_GESTAO_HOTEL.QUARTOS(QUARTO_ID)
);

CREATE TABLE USR_GESTAO_HOTEL.PEDIDOS (
    PEDIDO_ID NUMBER NOT NULL,
    CLIENTE_ID NUMBER NOT NULL,
    DATA_PEDIDO TIMESTAMP,
    TOTAL NUMBER(10,2),
    STATUS VARCHAR2(50),
    PRIMARY KEY (PEDIDO_ID),
    FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL.CLIENTES(CLIENTE_ID)
);

CREATE TABLE USR_GESTAO_HOTEL.ITENS_PEDIDO (
    ITEM_PEDIDO_ID NUMBER NOT NULL,
    PEDIDO_ID NUMBER NOT NULL,
    NOME_ITEM VARCHAR2(100) NOT NULL,
    QUANTIDADE NUMBER NOT NULL,
    PRECO_UNITARIO NUMBER(10,2),
    PRIMARY KEY (ITEM_PEDIDO_ID),
    FOREIGN KEY (PEDIDO_ID) REFERENCES USR_GESTAO_HOTEL.PEDIDOS(PEDIDO_ID)
);


--4

CREATE TABLE USR_GESTAO_PROJ.TAREFAS (
    TAREFA_ID NUMBER NOT NULL,
    PROJETO_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DESCRICAO CLOB,
    RESPONSAVEL_ID NUMBER,
    DATA_INICIO DATE,
    DATA_FIM DATE,
    STATUS VARCHAR2(50),
    PRIMARY KEY (TAREFA_ID),
    FOREIGN KEY (PROJETO_ID) REFERENCES USR_GESTAO_PROJ.PROJETOS(PROJETO_ID),
    FOREIGN KEY (RESPONSAVEL_ID) REFERENCES USR_GESTAO_PROJ.FUNCIONARIOS(FUNCIONARIO_ID)
);

CREATE TABLE USR_GESTAO_PROJ.FUNCIONARIOS (
    FUNCIONARIO_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASCIMENTO DATE,
    CARGO VARCHAR2(100),
    SALARIO NUMBER(10,2),
    DATA_ADMISSAO DATE,
    PRIMARY KEY (FUNCIONARIO_ID)
);

CREATE TABLE USR_GESTAO_PROJ.PROJETOS (
    PROJETO_ID NUMBER NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DESCRICAO CLOB,
    DATA_INICIO DATE,
    DATA_FIM DATE,
    ORCAMENTO NUMBER(10,2),
    PRIMARY KEY (PROJETO_ID)
);

CREATE TABLE USR_GESTAO_PROJ.ALOCACOES_RECURSOS (
    ALOCACAO_ID NUMBER NOT NULL,
    PROJETO_ID NUMBER NOT NULL,
    FUNCIONARIO_ID NUMBER NOT NULL,
    HORAS_TRABALHADAS NUMBER(5,2),
    PRIMARY KEY (ALOCACAO_ID),
    FOREIGN KEY (PROJETO_ID) REFERENCES USR_GESTAO_PROJ.PROJETOS(PROJETO_ID),
    FOREIGN KEY (FUNCIONARIO_ID) REFERENCES USR_GESTAO_PROJ.FUNCIONARIOS(FUNCIONARIO_ID)
);


-- 5

CREATE TABLE USR_GESTAO_RH.DEPARTAMENTOS (
    DEPARTAMENTO_ID NUMBER(38,0) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    LOCALIZACAO VARCHAR2(100),
    PRIMARY KEY (DEPARTAMENTO_ID)
);

CREATE TABLE USR_GESTAO_RH.FUNCIONARIOS (
    FUNCIONARIO_ID NUMBER(38,0) NOT NULL,
    NOME VARCHAR2(100) NOT NULL,
    DATA_NASCIMENTO DATE,
    CARGO VARCHAR2(100),
    SALARIO NUMBER(10,2),
    DATA_ADMISSAO DATE,
    DEPARTAMENTO_ID NUMBER(38,0),
    PRIMARY KEY (FUNCIONARIO_ID),
    FOREIGN KEY (DEPARTAMENTO_ID) REFERENCES USR_GESTAO_RH.DEPARTAMENTOS(DEPARTAMENTO_ID)
);

CREATE TABLE USR_GESTAO_RH.AVALIACOES_DESEMPENHO (
    AVALIACAO_ID NUMBER(38,0) NOT NULL,
    FUNCIONARIO_ID NUMBER(38,0) NOT NULL,
    DATA_AVALIACAO DATE,
    NOTA NUMBER(4,2),
    COMENTARIOS VARCHAR2(4000),
    PRIMARY KEY (AVALIACAO_ID),
    FOREIGN KEY (FUNCIONARIO_ID) REFERENCES USR_GESTAO_RH.FUNCIONARIOS(FUNCIONARIO_ID)
);

CREATE TABLE USR_GESTAO_RH.FOLHA_PAGAMENTO (
    PAGAMENTO_ID NUMBER(38,0) NOT NULL,
    FUNCIONARIO_ID NUMBER(38,0) NOT NULL,
    DATA_PAGAMENTO DATE,
    SALARIO_BRUTO NUMBER(10,2),
    DESCONTOS NUMBER(10,2),
    SALARIO_LIQUIDO NUMBER(10,2),
    PRIMARY KEY (PAGAMENTO_ID),
    FOREIGN KEY (FUNCIONARIO_ID) REFERENCES USR_GESTAO_RH.FUNCIONARIOS(FUNCIONARIO_ID)
);

